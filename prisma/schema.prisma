generator client {
  provider = "prisma-client-js"
}

generator jsonSchema {
  provider              = "prisma-json-schema-generator"
  includeRequiredFields = "true"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String?
  access_token             String?
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?
  session_state            String?
  refresh_token_expires_in Int?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String    @unique
  password      String
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Country {
  id      String   @id @default(cuid())
  name    String
  code    String
  reports Report[]
}

model Funnel {
  id      String   @id @default(cuid())
  name    String
  reports Report[]
}

model Report {
  id String @id @default(cuid())

  leads   Int @default(0)
  ftd     Int @default(0)
  nbt     Int @default(0)
  invalid Int @default(0)

  isNetwork Boolean @default(false)

  created_at  DateTime
  sended_date DateTime
  countryId   String
  funnelId    String
  country     Country  @relation(fields: [countryId], references: [id], onDelete: Cascade)
  funnel      Funnel   @relation(fields: [funnelId], references: [id], onDelete: Cascade)
}
